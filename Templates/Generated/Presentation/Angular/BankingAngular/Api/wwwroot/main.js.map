{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bank-account/bank-account.component.css","webpack:///./src/app/bank-account/bank-account.component.html","webpack:///./src/app/bank-account/bank-account.component.ts","webpack:///./src/app/books/books.component.css","webpack:///./src/app/books/books.component.html","webpack:///./src/app/books/books.component.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/customers/customers.component.css","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/hero-form/hero-form.component.css","webpack:///./src/app/hero-form/hero-form.component.html","webpack:///./src/app/hero-form/hero-form.component.ts","webpack:///./src/app/hero.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/software/software.component.css","webpack:///./src/app/software/software.component.html","webpack:///./src/app/software/software.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/data.services.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACa;AACQ;AACpB;AACY;AACA;AACH;AACT;AAExD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAiB;KAE7B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,yFAAoB;KAChC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC7B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;KAC1B;IACD,GAAG;IACH,wBAAwB;IACxB,+BAA+B;IAC/B,cAAc;IACd,4BAA4B;IAC5B,KAAK;IACL,IAAI;IACJ;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,GAAG;KAChB;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzD7B,sCAAsC,oBAAoB,6BAA6B,yBAAyB,aAAa,gBAAgB,cAAc,eAAe,KAAK,6CAA6C,sBAAsB,sGAAsG,KAAK,6BAA6B,uBAAuB,KAAK,oCAAoC,oNAAoN,KAAK,uDAAuD,iMAAiM,KAAK,K;;;;;;;;;;;ACAh5B,2GAA2G,OAAO,g1GAAg1G,WAAW,iCAAiC,WAAW,+N;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz6G;AAC5C;AAGe;AAEnD,sFAAsF;AAOtF;IAgBE,sBAAoB,WAAiB,EAAE,iBAAoC,EAAE,KAAmB;QAA5E,gBAAW,GAAX,WAAW,CAAM;QAbrC,UAAK,GAAwD,EAAE,CAAC;QAEhE,cAAS,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,sBAAY,CAAC,GAAG,CAAC,CAAE,EAAnB,CAAmB,CAAC,CAAC;QAEtE,kBAAa,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;YACzC,seAI0F;QAJ1F,CAI0F,CAAC,CAAC;QAsB9F,cAAS,GAAa,EAAE,CAAC;QAUvB,oGAAoG;QAEpG,cAAS,GAAG,IAAI,CAAC;QA7BjB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;QAC1D,IAAI,CAAC,oBAAoB,GAAG,cAAM,wBAAiB,CAAC,aAAa,EAAE,EAAjC,CAAiC,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAExD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,eAAe,EAAE,EAClD,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,iBAAiB,EAAE,EACtE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,EACvD,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,iBAAiB,EAAE,EACjE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,EAC1D,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,EACnD,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,EAClD,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,gBAAgB,EAAE,CACzD,CAAC;IAEJ,CAAC;IAGD,+BAAQ,GAAR;QACE,mEAAmE;QACnE,6CAA6C;QAC7C,0BAA0B;QAC1B,uBAAuB;QACvB,6EAA6E;QAC7E,KAAK;IACP,CAAC;IA1CU,YAAY;QALtB,+DAAS,CAAC;YACX,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAiBiC,kDAAI,EAAqB,+DAAiB,EAAS,gEAAY;OAhBrF,YAAY,CA+CxB;IAAD,mBAAC;CAAA;AA/CwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACjB;AACM;AACF;AACF;AAEa;AAExD,kBAAkB;AAC6D;AAmBpD;AAE3B,QAAQ;AAC4D;AACC;AACZ;AACS;AACG;AACQ;AACpB;AA8CzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QA5CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,gFAAiB;gBACjB,iFAAkB;gBAClB,sEAAc;gBACd,+EAAiB;gBACjB,kFAAkB;gBAClB,0FAAoB;gBACpB,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;gBACV,4FAAuB;gBACvB,iEAAe;gBACf,mEAAiB;gBACjB,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,qEAAmB;gBACnB,iEAAe;gBACf,gEAAc;gBACd,+DAAa;gBACb,oEAAkB;gBAClB,0EAAwB;gBACxB,iEAAe;gBACf,kEAAgB;gBAChB,+DAAa;gBACb,gEAAc;gBACd,oEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnFtB,mB;;;;;;;;;;;ACAA,yS;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,mB;;;;;;;;;;;ACAA,oE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,sE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,sE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,oCAAoC,YAAY,8nCAA8nC,KAAK,2XAA2X,0QAA0Q,cAAc,8IAA8I,kBAAkB,0IAA0I,eAAe,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArlE;AACX;AACK;AACuB;AAQ3D;IAIE,2BAAoB,WAAiB;QAArC,iBAOC;QAPmB,gBAAW,GAAX,WAAW,CAAM;QAQrC,WAAM,GAAG,CAAC,cAAc,EAAE,gBAAgB;YACxC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAElC,cAAS,GAAG,KAAK,CAAC;QAVhB,IAAI,WAAW,GAAgB,IAAI,mEAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACjE,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YACjC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACb,OAAO,CAAC,GAAG,CAAC,mDAAmD,GAAG,KAAK,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,oCAAQ,GAAR,cAAa,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IAErC,mCAAO,GAAP;QACE,iCAAiC;QACjC,IAAI,CAAC,KAAK,GAAG,IAAI,0CAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACpC,CAAC;IAtBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAKiC,kDAAI;OAJ1B,iBAAiB,CAuB7B;IAAD,wBAAC;CAAA;AAvB6B;;;;;;;;;;;;;;ACX9B;AAAA;IAEE,cACS,EAAU,EACV,IAAY,EACZ,KAAa,EACb,QAAiB;QAHjB,OAAE,GAAF,EAAE,CAAQ;QACV,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAS;IACtB,CAAC;IAEP,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACTD,mB;;;;;;;;;;;ACAA,kE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,qE;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;ACP9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;ACVC;AAEnC;IAGE,qBAAY,WAAiB;QAI7B,cAAS,GAAa,EAAE,CAAC;QAHvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAIM,kCAAY,GAAnB;QAAA,iBAUC;QARC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gBAAM;gBACzD,OAAO,CAAC,MAAM,CAAC,IAAI,EAAc,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;gBACb,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gCAAU,GAAjB;QAEE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,kEAAkE;YAClE,mCAAmC;YACnC,uBAAuB;YACvB,kBAAkB;YAClB,KAAK;YACL,OAAO,CAAC,IAAI,8CAAI,CAAC,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACrE,IAAI;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HeroFormComponent } from \"./hero-form/hero-form.component\";\r\nimport { BankAccountComponent } from \"./bank-account/bank-account.component\"\r\nimport { BooksComponent } from \"./books/books.component\"\r\nimport { CountriesComponent } from \"./countries/countries.component\"\r\nimport { CustomersComponent } from \"./customers/customers.component\"\r\nimport { SoftwareComponent } from \"./software/software.component\"\r\nimport { LoginComponent } from \"./login/login.component\"\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: HeroFormComponent\r\n\r\n  },\r\n  {\r\n    path: \"bankAccount\",\r\n    component: BankAccountComponent \r\n  },\r\n  {\r\n    path: \"books\",\r\n    component: BooksComponent\r\n  },\r\n  {\r\n    path: \"countries\",\r\n    component: CountriesComponent \r\n  },\r\n  {\r\n    path: \"customers\",\r\n    component: CustomersComponent \r\n  },\r\n  {\r\n    path: \"software\",\r\n    component: SoftwareComponent\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent \r\n  },\r\n  //{\r\n  //  path: 'courses/:id',\r\n  //  component: CourseComponent,\r\n  //  resolve: {\r\n  //    course: CourseResolver\r\n  //  }\r\n  //},\r\n  {\r\n    path: \"**\",\r\n    redirectTo: '/'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\nh1.example-app-name {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-sidenav-container {\\r\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-sidenav-container {\\r\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n  flex: 1 0 auto;\\r\\n}\\r\\n\"","module.exports = \"<!--<h1>Application says what?</h1>\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let value of apiValues\\\">{{value}}</li>\\r\\n</ul>\\r\\n\\r\\n<app-hero-form></app-hero-form>-->\\r\\n\\r\\n<!--<div>\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <span><mat-icon>mood</mat-icon></span>\\r\\n\\r\\n    <span>Yay, Material in Angular 2!</span>\\r\\n\\r\\n    <button mat-icon-button [mat-menu-trigger-for]=\\\"menu\\\">\\r\\n      <mat-icon>more_vert</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar>\\r\\n  <mat-menu x-position=\\\"before\\\" #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item>Option 1</button>\\r\\n    <button mat-menu-item>Option 2</button>\\r\\n  </mat-menu>\\r\\n\\r\\n  <mat-card>\\r\\n    <button mat-button>All</button>\\r\\n    <button mat-raised-button>Of</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\">The</button>\\r\\n    <button mat-raised-button color=\\\"accent\\\">Buttons</button>\\r\\n  </mat-card>\\r\\n\\r\\n  <span class=\\\"done\\\">\\r\\n    <button mat-fab>\\r\\n      <mat-icon>check circle</mat-icon>\\r\\n    </button>\\r\\n  </span>\\r\\n</div>-->\\r\\n\\r\\n<!--<mat-sidenav-container fullscreen>\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <span>Application Title</span>\\r\\n\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n\\r\\n    <span>Right Aligned Text</span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-sidenav #start>\\r\\n    <mat-nav-list>\\r\\n\\r\\n      <a mat-list-item routerLink=\\\"/\\\">\\r\\n        <mat-icon>library_books</mat-icon>\\r\\n        <span>Hero</span>\\r\\n      </a>\\r\\n\\r\\n      <a mat-list-item routerLink=\\\"bankAccount\\\">\\r\\n        <mat-icon>account_balance</mat-icon>\\r\\n        <span>Bank Account</span>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"books\\\">\\r\\n        <mat-icon>library_books</mat-icon>\\r\\n        <span>Books</span>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"countries\\\">\\r\\n        <mat-icon>question_answer</mat-icon>\\r\\n        <span>Countries</span>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"customers\\\">\\r\\n        <mat-icon>contacts</mat-icon>\\r\\n        <span>Customers</span>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"software\\\">\\r\\n        <mat-icon>web</mat-icon>\\r\\n        <span>Software</span>\\r\\n      </a>\\r\\n      <a mat-list-item>\\r\\n        <mat-icon>person_add</mat-icon>\\r\\n        <span>Register</span>\\r\\n      </a>\\r\\n      <a mat-list-item routerLink=\\\"login\\\">\\r\\n        <mat-icon>account_circle</mat-icon>\\r\\n        <span>Login</span>\\r\\n      </a>\\r\\n    </mat-nav-list>\\r\\n\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <button mat-icon-button (click)=\\\"start.open('mouse')\\\">\\r\\n      <mat-icon>menu</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n\\r\\n</mat-sidenav-container>-->\\r\\n\\r\\n<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\" fullscreen>\\r\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\r\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n    <h1 class=\\\"example-app-name\\\">Responsive App</h1>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\"\\r\\n                         [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\"  >\\r\\n\\r\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\r\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\r\\n      <mat-nav-list>\\r\\n        <a mat-list-item *ngFor=\\\"let link of links\\\" [routerLink]=\\\"link.path\\\">\\r\\n          <mat-icon>{{link.icon}}</mat-icon>\\r\\n          <span>{{link.text}}</span>\\r\\n        </a>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content>\\r\\n      <router-outlet></router-outlet>\\r\\n    </mat-sidenav-content>\\r\\n\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\"","import { ChangeDetectorRef, Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Http } from '@angular/http'\r\nimport { DataService } from \"../services/data.services\";\r\n\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\n\r\n// https://stackblitz.com/angular/aydrrdqnrjk?file=app%2Fsidenav-responsive-example.ts\r\n\r\n  @Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  mobileQuery: MediaQueryList;\r\n  links: Array<{ text: string, path: string, icon: string }> = [];\r\n  \r\n  fillerNav = Array.from({ length: 50 }, (_, i) => `Nav Item ${i + 1}`);\r\n\r\n  fillerContent = Array.from({ length: 50 }, () =>\r\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(private httpService: Http, changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\r\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n\r\n    this.links.push(\r\n      { text: 'Hero', path: '/', icon: \"library_books\" },\r\n      { text: 'Bank Account', path: 'bankAccount', icon: \"account_balance\" },\r\n      { text: 'Books', path: 'books', icon: \"library_books\" },\r\n      { text: 'Countries', path: 'countries', icon: \"question_answer\" },\r\n      { text: 'Customers', path: 'customers', icon: \"contacts\" },\r\n      { text: 'Software', path: 'software', icon: \"web\" },\r\n      { text: 'Register', path: '', icon: \"person_add\" },\r\n      { text: 'Login', path: 'login', icon: \"account_circle\" }\r\n    );\r\n\r\n  }\r\n\r\n  apiValues: string[] = [];\r\n  ngOnInit() {\r\n    //let dataService: DataService = new DataService(this.httpService);\r\n    //dataService.returnValues().then((data) => {\r\n    //  this.apiValues = data;\r\n    //}).catch((error) => {\r\n    //  console.log(\"An unknown error occured while returning values: \" + error);\r\n    //});\r\n  }\r\n\r\n    //shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\r\n\r\n    shouldRun = true;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n// Material Design\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSortModule,\r\n  MatTableModule\r\n} from '@angular/material';\r\n\r\n// Pages\r\nimport { HeroFormComponent } from './hero-form/hero-form.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { BooksComponent } from './books/books.component';\r\nimport { SoftwareComponent } from './software/software.component';\r\nimport { CountriesComponent } from './countries/countries.component';\r\nimport { BankAccountComponent } from './bank-account/bank-account.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeroFormComponent,\r\n    CustomersComponent,\r\n    BooksComponent,\r\n    SoftwareComponent,\r\n    CountriesComponent,\r\n    BankAccountComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    AppRoutingModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<mat-card>\\r\\n  <h1>bank-account works!</h1>\\r\\n  <button mat-button>All</button>\\r\\n  <button mat-raised-button>Of</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\">The</button>\\r\\n  <button mat-raised-button color=\\\"accent\\\">Buttons</button>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bank-account',\n  templateUrl: './bank-account.component.html',\n  styleUrls: ['./bank-account.component.css']\n})\nexport class BankAccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n    books works!\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  countries works!\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  customers works!\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  {{diagnostic}}\\r\\n  <div [hidden]=\\\"submitted\\\">\\r\\n    <h1>Hero Form</h1>\\r\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\r\\n               required\\r\\n               [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\"\\r\\n               #name=\\\"ngModel\\\">\\r\\n        <div [hidden]=\\\"name.valid || name.pristine\\\"\\r\\n             class=\\\"alert alert-danger\\\">\\r\\n          Name is required\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"alterEgo\\\">Alter Ego</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"alterEgo\\\"\\r\\n               [(ngModel)]=\\\"model.alterEgo\\\" name=\\\"alterEgo\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"power\\\">Hero Power</label>\\r\\n        <select class=\\\"form-control\\\" id=\\\"power\\\"\\r\\n                required\\r\\n                [(ngModel)]=\\\"model.power\\\" name=\\\"power\\\"\\r\\n                #power=\\\"ngModel\\\">\\r\\n          <option *ngFor=\\\"let pow of powers\\\" [value]=\\\"pow\\\">{{pow}}</option>\\r\\n        </select>\\r\\n        <div [hidden]=\\\"power.valid || power.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          Power is required\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!heroForm.form.valid\\\">Submit</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newHero(); heroForm.reset()\\\">New Hero</button>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n  <div [hidden]=\\\"!submitted\\\">\\r\\n    <h2>You submitted the following:</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-3\\\">Name</div>\\r\\n      <div class=\\\"col-xs-9  pull-left\\\">{{ model.name }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-3\\\">Alter Ego</div>\\r\\n      <div class=\\\"col-xs-9 pull-left\\\">{{ model.alterEgo }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-3\\\">Power</div>\\r\\n      <div class=\\\"col-xs-9 pull-left\\\">{{ model.power }}</div>\\r\\n    </div>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitted=false\\\">Edit</button>\\r\\n  </div>\\r\\n</mat-card>\\r\\n\"","import { Component } from '@angular/core';\nimport { Hero } from '../hero';\nimport { Http } from '@angular/http'\nimport { DataService } from \"../../services/data.services\";\n\n\n@Component({\n  selector: 'app-hero-form',\n  templateUrl: './hero-form.component.html',\n  styleUrls: ['./hero-form.component.css']\n})\nexport class HeroFormComponent {\n\n  model: Hero;\n\n  constructor(private httpService: Http) {\n    let dataService: DataService = new DataService(this.httpService);\n    dataService.returnHero().then((data) => {\n      this.model = data;\n    }).catch((error) => {\n      console.log(\"An unknown error occured while returning values: \" + error);\n    });\n  }\n  powers = ['Really Smart', 'Super Flexible',\n    'Super Hot', 'Weather Changer'];\n\n  submitted = false;\n\n  onSubmit() { this.submitted = true; }\n\n  newHero() {\n    // https://angular.io/guide/forms\n    this.model = new Hero(42, '', '');\n  }\n}\n","export class Hero {\r\n\r\n  constructor(\r\n    public id: number,\r\n    public name: string,\r\n    public power: string,\r\n    public alterEgo?: string\r\n  ) { }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  login works!\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  software works!\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-software',\n  templateUrl: './software.component.html',\n  styleUrls: ['./software.component.css']\n})\nexport class SoftwareComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Http } from '@angular/http'\r\nimport { Hero } from '../app/hero';\r\n\r\nexport class DataService {\r\n  httpService: Http;\r\n\r\n  constructor(httpService: Http) {\r\n    this.httpService = httpService;\r\n  }\r\n\r\n  apiValues: string[] = [];\r\n\r\n  public returnValues(): Promise<string[]> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.httpService.get('/api/values').toPromise().then(values => {\r\n        resolve(values.json() as string[]);\r\n      }).catch((error) => {\r\n        reject(error);\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  public returnHero(): Promise<Hero> {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      //this.httpService.get('/api/values').toPromise().then(values => {\r\n      //  resolve(values.json() as Hero);\r\n      //}).catch((error) => {\r\n      //  reject(error);\r\n      //});\r\n      resolve(new Hero(18, 'Dr IQ', 'Really Smart', 'Chuck Overstreet'));\r\n    //);\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}