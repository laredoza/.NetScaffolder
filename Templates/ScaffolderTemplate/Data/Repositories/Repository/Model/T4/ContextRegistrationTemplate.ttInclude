<#+
public class ContextRegistrationTemplate : BaseTemplate 
{
	public StructureMapDataType DataType { get; set; }
	public ContextData ContextData { get; set; }
	public IDriver Driver { get; set; }

	public override string TransformText()
	{
		//Debugger.Break();
		Header = new CopyrightHeader();
		Header.Filename = "ContextRegistration";
#>

<#= Header.TransformText() #>

// *******************************************************************
//	GENERATED CODE. DOT NOT MODIFY MANUALLY AS CHANGES CAN BE LOST!!!
//	USE A PARTIAL CLASS INSTEAD
// *******************************************************************
<#+ foreach(var nameSpace in DataType.AdditionalNamespaces){ #>
using <#= nameSpace #>;
<#+ } #>
<#+ foreach(var nameSpace in Driver.NameSpaces){ #>
using <#= nameSpace #>;
<#+ } #>
using <#= ContextData.TransformFullnamespace(DataType.BaseNamespace) #>.<#= Driver.Prefix #>.<#= Driver.ParentFolder #>;
using System;
using System.Collections.Generic;

namespace <#= ContextData.TransformFullnamespace(DataType.BaseNamespace) #>.<#= Driver.Prefix #>.<#= Driver.ParentFolder #>.<#= DataType.Namespace #>
{
	public class ContextRegistration : StructureMap.Registry
	{			
		#region CTOR
		
        public ContextRegistration()
        {
            this.For<IDatabaseManager>().LifecycleIs(Lifecycles.Container).Use<DatabaseManager>();
        }
		
		#endregion
	}
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}
#>
