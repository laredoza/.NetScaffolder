<#@ assembly name="System" #>
<#@ assembly name="System.Configuration" #>
<#@ assembly name="System.Globalization" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="$(ProjectDir)Model\Package\Common.Logging.Core.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\Common.Logging.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\DotNetScaffolder.Core.Common.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\DotNetScaffolder.Mapping.MetaData.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\DotNetScaffolder.Components.DataTypes.DefaultDataTypes.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\FormControls.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\DotNetScaffolder.Components.Common.dll" #>
<#@ assembly name="$(ProjectDir)Model\Package\Configuration.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Globalization" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml.Serialization" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="DotNetScaffolder.Mapping.MetaData.Project" #>
<#@ import namespace="DotNetScaffolder.Mapping.MetaData.Model" #>
<#@ import namespace="DotNetScaffolder.Core.Common.Serializer" #>
<#@ import namespace="DotNetScaffolder.Components.DataTypes.DefaultDataTypes" #>
<#@ import namespace="Configuration" #>
<#@ include file="ContextTemplate.ttinclude" #>
<#+
public class ContextGenerator : BaseGenerator
{
	public IDataType DataType {get;set;}
	public string BaseNamespace{get;set;}
	
	public ContextDataType ContextDataType
	{
		get
		{
			return (ContextDataType)this.DataType;
		}
	}
	private ContextTemplate contextTemplate = new ContextTemplate();

	protected override void RunCore()
	{
		Debugger.Break();
		contextTemplate.DataType = this.ContextDataType;
		contextTemplate.NamingConvention = NamingConvention;
		contextTemplate.CollectionOption = CollectionOption;
		contextTemplate.BaseNamespace = BaseNamespace;

		foreach(var dbContext in ContextDataType.Contexts)
		{
			contextTemplate.ContextData = dbContext;
			Debugger.Break();
			if(!string.IsNullOrEmpty(dbContext.OutputPath))
			{
				contextTemplate.RenderToFile(string.Format(@"{0}\{1}\{2}.g.cs", dbContext.OutputPath, dbContext.OutputFolder, dbContext.ContextName));
			}
			else
			{
				contextTemplate.RenderToFile(string.Format(@"{0}\{1}.g.cs", dbContext.OutputFolder, dbContext.ContextName));	
			}
		}
	}
}
#>
