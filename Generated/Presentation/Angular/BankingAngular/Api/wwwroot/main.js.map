{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/data.services.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,uGAAuG,OAAO,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5D;AACd;AACoB;AACxD,gDAAgD;AAOhD;IACE,sBAAoB,WAAiB;QAAjB,gBAAW,GAAX,WAAW,CAAM;QACrC,cAAS,GAAa,EAAE,CAAC;IADgB,CAAC;IAE1C,+BAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,WAAW,GAAG,IAAI,mEAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,WAAW,CAAC,YAAY,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,EAAc,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IATU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAEiC,kDAAI;OAD1B,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACM;AAEF;AACF;AAc3C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACnBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;ACTlC;AAAA;IAGE,qBAAY,WAAiB;QAI7B,cAAS,GAAa,EAAE,CAAC;QAHvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAIM,kCAAY,GAAnB;QACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gBAAM;YACzD,6CAA6C;YAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAc,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IACH,kBAAC;AAAD,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>Application says what?</h1>\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let value of apiValues\\\">{{value}}</li>\\r\\n</ul>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http'\r\nimport { DataService } from \"../services/data.services\";\r\n//import DataService = Dataservices.DataService;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private httpService: Http) { }\r\n  apiValues: string[] = [];\r\n  ngOnInit() {\r\n    var dataService = new DataService(this.httpService);\r\n    console.log(\"Data Service Call Result:\" + dataService.returnValues());\r\n    this.httpService.get('/api/values').subscribe(values => {\r\n      this.apiValues = values.json() as string[];\r\n    });\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Http } from '@angular/http'\r\n\r\nexport class DataService {\r\n  httpService: Http;\r\n\r\n  constructor(httpService: Http) {\r\n    this.httpService = httpService;\r\n  }\r\n\r\n  apiValues: string[] = [];\r\n\r\n  public returnValues() {\r\n    this.httpService.get('/api/values').toPromise().then(values => {\r\n      //this.apiValues = values.json() as string[];\r\n      return values.json() as string[];\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}