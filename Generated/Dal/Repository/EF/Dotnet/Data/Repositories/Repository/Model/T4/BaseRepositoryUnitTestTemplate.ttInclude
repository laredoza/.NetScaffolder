<#+
public class BaseRepositoryUnitTestTemplate : BaseTemplate 
{
    public List<Table> Models { get; set; }
	
	public override string TransformText()
	{
		// Debugger.Break();
		Header = new CopyrightHeader();
		Header.Filename = "BaseRepositoryUnitTest.g.cs";
#>

<#= Header.TransformText() #>

// *******************************************************************
//	GENERATED CODE. DOT NOT MODIFY MANUALLY AS CHANGES CAN BE LOST!!!
//	USE A PARTIAL CLASS INSTEAD
// *******************************************************************

using Banking.Models.Dto;
using Banking.Models.Interfaces;
using Banking.Models.Repository;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using RepositoryEFDotnet.Library;
using System.Linq;

namespace RepositoryEFDotnet.UnitTest
{
	[TestClass]
	public abstract partial class BaseRepositoryUnitTest : BaseUnitTest
	{
        #region Privates

        protected static IUnitOfWork Context = null;

        #endregion

        #region Tests
		
<#+ foreach(var mdl in Models){ #>

		[TestMethod]
        public void <#= mdl.TableName #>_Add()
        {
            var repo = new <#= mdl.TableName #>Repository(Context);
            BaseRepositoryUnitTest_<#= mdl.TableName #>_Add(repo);
        }
<#+ } #>

		#endregion
		
		#region Base Tests
<#+ foreach(var mdl in Models){ #>

        public virtual void BaseRepositoryUnitTest_<#= mdl.TableName #>_Add(I<#= mdl.TableName #>Repository repository)
        {
            var dto = new <#= mdl.TableName #>Dto();
            Populate<#= mdl.TableName #>(dto);
            repository.Save(dto);
            Context.Commit();

            // Load from db and check values
            var result = repository.LoadAll();

            // Test count
            Check_EntityCount(1, result.Count, "<#= mdl.TableName #>");
            Check_<#= mdl.TableName #>(dto, result.FirstOrDefault());
        }
<#+ } #>

		#endregion
		
        #region Cleanup

        [ClassCleanup]
        public virtual void ClassCleanup()
        {
            Context?.Dispose();
        }

        #endregion
	}
}
<#+
		return this.GenerationEnvironment.ToString();
	}
}
#>
